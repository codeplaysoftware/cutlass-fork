name: install-dpcpp
description: Download and unpack DPC++ nightly release
inputs:
  DPCPP_VERSION:
    description: "DPC++ version to use"
    type: string
  DPCPP_PATH:
    description: Path to DPC++
    type: string
runs:
  using: "composite"
  steps:
    - name: Install DPCPP
      id: install_dpcpp
      shell: bash
      run: |
        export DPCPP_PATH=${{ inputs.DPCPP_PATH }}
        mkdir $DPCPP_PATH
        pushd $DPCPP_PATH
        if [[ "${{ inputs.DPCPP_VERSION }}" != "" ]]; then \
          echo "Will use DPCPP ${{ inputs.DPCPP_VERSION }}."; \
          echo "Downloading DPCPP from https://github.com/intel/llvm/releases/download/${{ inputs.DPCPP_VERSION }}/sycl_linux.tar.gz"; \
          wget -q https://github.com/intel/llvm/releases/download/${{ inputs.DPCPP_VERSION }}/sycl_linux.tar.gz; \
        else
          echo "Will use latest DPCPP version."; \
          latest=$(curl -sS https://api.github.com/repos/intel/llvm/releases | jq -r '[.[].tag_name|select(match("nightly-[0-9]{4}-[0-9]{2}-[0-9]{2}"))][0]') && \
          echo "Downloading DPCPP from https://github.com/intel/llvm/releases/download/${latest}/sycl_linux.tar.gz"; \
          wget -q https://github.com/intel/llvm/releases/download/${latest}/sycl_linux.tar.gz; \
        fi
        tar -xf sycl_linux.tar.gz
        rm sycl_linux.tar.gz
        popd


